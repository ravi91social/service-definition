openapi: 3.0.3
info:
  contact:
    email: info@egovernments.org
    name: Digit
  description: "API specs for service attribute definition and capture service attribute\
    \ \ndetails \n"
  title: Service Request
  version: 1.0.0
servers:
- url: /
paths:
  /service/definition/v1/_create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDefinitionRequest'
      responses:
        "202":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceDefinitionResponse'
          description: Request accepted.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
          description: Invalid input.
      tags:
      - Service Definition
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: Service Definition
  /service/definition/v1/_search:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDefinitionSearchRequest'
      responses:
        "202":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceDefinitionResponse'
          description: Request accepted.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
          description: Invalid input.
      tags:
      - Service Definition
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: Service Definition
  /service/v1/_create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        "202":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceResponse'
          description: Request accepted.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
          description: Invalid input.
      tags:
      - Service
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: Service
  /service/v1/_search:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSearchRequest'
      responses:
        "202":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceResponse'
          description: Request accepted.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
          description: Invalid input.
      tags:
      - Service
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: Service
components:
  schemas:
    ServiceDefinition:
      description: Holds the Service Definition details json object.
      example:
        code: code
        clientId: clientId
        auditDetails:
          lastModifiedTime: 1
          createdBy: createdBy
          lastModifiedBy: lastModifiedBy
          createdTime: 6
        tenantId: pb.amritsar
        attributes:
        - regEx: regEx
          code: code
          dataType: String
          values:
          - values
          - values
          auditDetails:
            lastModifiedTime: 1
            createdBy: createdBy
            lastModifiedBy: lastModifiedBy
            createdTime: 6
          tenantId: pb.amritsar
          id: id
          isActive: true
          additionalDetails: "{}"
          required: true
          order: order
        - regEx: regEx
          code: code
          dataType: String
          values:
          - values
          - values
          auditDetails:
            lastModifiedTime: 1
            createdBy: createdBy
            lastModifiedBy: lastModifiedBy
            createdTime: 6
          tenantId: pb.amritsar
          id: id
          isActive: true
          additionalDetails: "{}"
          required: true
          order: order
        id: id
        isActive: true
        additionalDetails: "{}"
      properties:
        id:
          description: Unique identifier of the record
          maxLength: 64
          minLength: 2
          readOnly: true
          type: string
        tenantId:
          description: Tenant Identifier
          example: pb.amritsar
          maxLength: 64
          minLength: 2
          type: string
        code:
          description: unique namespaced service code to identify the attribute config
            for code
          maxLength: 64
          minLength: 2
          type: string
        isActive:
          default: true
          description: If false then consider this as soft deleted record
          type: boolean
        attributes:
          items:
            $ref: '#/components/schemas/AttributeDefinition'
          type: array
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        additionalDetails:
          description: Any additional key-value pair to be stored with the service.
          type: object
        clientId:
          description: Client Id for service definition
          maxLength: 64
          minLength: 2
          type: string
      required:
      - attributes
      - code
      type: object
    AttributeDefinition:
      description: Hold the attribute definition fields details as json object.
      example:
        regEx: regEx
        code: code
        dataType: String
        values:
        - values
        - values
        auditDetails:
          lastModifiedTime: 1
          createdBy: createdBy
          lastModifiedBy: lastModifiedBy
          createdTime: 6
        tenantId: pb.amritsar
        id: id
        isActive: true
        additionalDetails: "{}"
        required: true
        order: order
      properties:
        id:
          description: Unique identifier of the record
          format: varchar
          maxLength: 64
          minLength: 2
          readOnly: true
          type: string
        tenantId:
          description: Tenant Identifier
          example: pb.amritsar
          maxLength: 64
          minLength: 2
          type: string
        code:
          description: unique code of attribute.
          format: varchar
          maxLength: 64
          minLength: 2
          type: string
        dataType:
          description: defines the attribute type
          enum:
          - String
          - Number
          - Text
          - Datetime
          - SingleValueList
          - MultiValueList
          - File
          type: string
        values:
          description: "values we can pass if field type is selected as('singlevaluelist','multivaluelist'). "
          items:
            maxItems: 100
            minItems: 1
            type: string
          type: array
        isActive:
          default: true
          description: if the value is true then the attribute will appear in search
          type: boolean
        required:
          description: value will be true if field is mandatory otherwise false.
          type: boolean
        regEx:
          description: Define the regular expression for field data validations
          maxLength: 64
          minLength: 2
          type: string
        order:
          description: order of the attributes for FE support
          type: string
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        additionalDetails:
          description: Any additional key-value pair to be stored with the service.
          type: object
      required:
      - code
      - dataType
      - isActive
      - reuired
      type: object
    Service:
      description: Hold the Service field details as json object.
      example:
        accountId: accountId
        clientId: clientId
        auditDetails:
          lastModifiedTime: 1
          createdBy: createdBy
          lastModifiedBy: lastModifiedBy
          createdTime: 6
        tenantId: pb.amritsar
        serviceDefId: serviceDefId
        attributes:
        - attributeCode: attributeCode
          auditDetails:
            lastModifiedTime: 1
            createdBy: createdBy
            lastModifiedBy: lastModifiedBy
            createdTime: 6
          id: id
          additionalDetails: "{}"
          value: "{}"
        - attributeCode: attributeCode
          auditDetails:
            lastModifiedTime: 1
            createdBy: createdBy
            lastModifiedBy: lastModifiedBy
            createdTime: 6
          id: id
          additionalDetails: "{}"
          value: "{}"
        id: id
        additionalDetails: "{}"
        referenceId: referenceId
      properties:
        id:
          description: Unique identifier of the record
          format: varchar
          readOnly: true
          type: string
        tenantId:
          description: Tenant Identifier
          example: pb.amritsar
          maxLength: 64
          minLength: 2
          type: string
        serviceDefId:
          description: Service definition id
          maxLength: 64
          minLength: 2
          type: string
        referenceId:
          description: if service is delivered for specific entity then we link this
            to that entity
          maxLength: 64
          minLength: 2
          type: string
        accountId:
          description: Account id of the individual
          maxLength: 64
          minLength: 2
          type: string
        clientId:
          description: Client Id for service
          maxLength: 64
          minLength: 2
          type: string
        attributes:
          description: "values we can pass if field type is selected as('singlevaluelist','multivaluelist'). "
          items:
            $ref: '#/components/schemas/AttributeValue'
          type: array
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        additionalDetails:
          description: Any additional key-value pair to be stored with the service.
          type: object
      required:
      - accountId
      - attributes
      - serviceDefId
      - tenantId
      type: object
    AttributeValue:
      description: Hold the attribute details as object.
      example:
        attributeCode: attributeCode
        auditDetails:
          lastModifiedTime: 1
          createdBy: createdBy
          lastModifiedBy: lastModifiedBy
          createdTime: 6
        id: id
        additionalDetails: "{}"
        value: "{}"
      properties:
        id:
          description: Unique identifier of the record
          format: varchar
          readOnly: true
          type: string
        attributeCode:
          description: Unique code of attribute from attributedefinition
          type: string
        value:
          description: "values we can pass if field type is selected as('singlevaluelist','multivaluelist'). "
          type: object
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        additionalDetails:
          description: Any additional key-value pair to be stored with the service.
          type: object
      required:
      - attributeCode
      - value
      type: object
    ServiceDefinitionCriteria:
      description: The object will contain all the search parameters for Service Definition.
      example:
        code:
        - code
        - code
        clientId: clientId
        tenantId: pb.amritsar
        ids:
        - ids
        - ids
      properties:
        tenantId:
          description: Tenant Identifier
          example: pb.amritsar
          maxLength: 64
          minLength: 2
          type: string
        ids:
          description: Search by service definition ids
          format: uuid
          items:
            type: string
          type: array
        code:
          description: Search by service definition code
          format: uuid
          items:
            type: string
          type: array
        clientId:
          description: Client Id
          maxLength: 64
          minLength: 2
          type: string
      required:
      - tenantId
      type: object
    ServiceCriteria:
      description: The object will contain all the search parameters for Service .
      example:
        accountId: accountId
        clientId: clientId
        referenceIds:
        - referenceIds
        - referenceIds
        tenantId: pb.amritsar
        ids:
        - ids
        - ids
        value: "{}"
        serviceDefIds:
        - serviceDefIds
        - serviceDefIds
      properties:
        tenantId:
          description: Tenant Identifier
          example: pb.amritsar
          maxLength: 64
          minLength: 2
          type: string
        ids:
          description: Search by service ids
          format: uuid
          items:
            type: string
          type: array
        serviceDefIds:
          description: Search by service definition ids
          format: uuid
          items:
            type: string
          type: array
        referenceIds:
          description: Search by service reference ids
          format: uuid
          items:
            type: string
          type: array
        accountId:
          description: Account Id of individual
          maxLength: 64
          minLength: 2
          type: string
        clientId:
          description: Client Id
          maxLength: 64
          minLength: 2
          type: string
        value:
          description: Search based on values provided in service
          type: object
      required:
      - tenantId
      type: object
    Pagination:
      description: Pagination details
      example:
        offSet: 5.637376656633329
        limit: 59.621339166831824
        sortBy: sortBy
        totalCount: 2.3021358869347655
        order: asc
      properties:
        limit:
          default: 10
          description: Limit for total no of records in single search max limit should
            be defined as environment variable
          format: integer
          maximum: 100
          type: number
        offSet:
          default: 0
          description: offset or page no
          type: number
        totalCount:
          description: Total count for a particular criteria
          readOnly: true
          type: number
        sortBy:
          description: result sorting order
          type: string
        order:
          description: Sorting order
          enum:
          - asc
          - desc
          type: string
      type: object
    ServiceDefinitionSearchRequest:
      example:
        pagination:
          offSet: 5.637376656633329
          limit: 59.621339166831824
          sortBy: sortBy
          totalCount: 2.3021358869347655
          order: asc
        serviceDefinitionCriteria:
          code:
          - code
          - code
          clientId: clientId
          tenantId: pb.amritsar
          ids:
          - ids
          - ids
        requestInfo:
          userInfo:
            additionalroles:
            - roles:
              - name: name
                description: description
              - name: name
                description: description
              tenantId: tenantId
            - roles:
              - name: name
                description: description
              - name: name
                description: description
              tenantId: tenantId
            tenantId: tenantId
            mobile: mobile
            id: 6
            userName: userName
            email: email
            primaryrole:
            - name: name
              description: description
            - name: name
              description: description
          ver: ver
          requesterId: requesterId
          authToken: authToken
          action: action
          msgId: msgId
          correlationId: correlationId
          apiId: apiId
          did: did
          key: key
          ts: 0
      properties:
        requestInfo:
          $ref: '#/components/schemas/RequestInfo'
        serviceDefinitionCriteria:
          $ref: '#/components/schemas/ServiceDefinitionCriteria'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - requestInfo
      - serviceDefinition
      type: object
    ServiceSearchRequest:
      example:
        pagination:
          offSet: 5.637376656633329
          limit: 59.621339166831824
          sortBy: sortBy
          totalCount: 2.3021358869347655
          order: asc
        serviceDefinition:
          accountId: accountId
          clientId: clientId
          referenceIds:
          - referenceIds
          - referenceIds
          tenantId: pb.amritsar
          ids:
          - ids
          - ids
          value: "{}"
          serviceDefIds:
          - serviceDefIds
          - serviceDefIds
        requestInfo:
          userInfo:
            additionalroles:
            - roles:
              - name: name
                description: description
              - name: name
                description: description
              tenantId: tenantId
            - roles:
              - name: name
                description: description
              - name: name
                description: description
              tenantId: tenantId
            tenantId: tenantId
            mobile: mobile
            id: 6
            userName: userName
            email: email
            primaryrole:
            - name: name
              description: description
            - name: name
              description: description
          ver: ver
          requesterId: requesterId
          authToken: authToken
          action: action
          msgId: msgId
          correlationId: correlationId
          apiId: apiId
          did: did
          key: key
          ts: 0
      properties:
        requestInfo:
          $ref: '#/components/schemas/RequestInfo'
        serviceDefinition:
          $ref: '#/components/schemas/ServiceCriteria'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - requestInfo
      - serviceDefinition
      type: object
    ServiceDefinitionRequest:
      example:
        serviceDefinition:
          code: code
          clientId: clientId
          auditDetails:
            lastModifiedTime: 1
            createdBy: createdBy
            lastModifiedBy: lastModifiedBy
            createdTime: 6
          tenantId: pb.amritsar
          attributes:
          - regEx: regEx
            code: code
            dataType: String
            values:
            - values
            - values
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            tenantId: pb.amritsar
            id: id
            isActive: true
            additionalDetails: "{}"
            required: true
            order: order
          - regEx: regEx
            code: code
            dataType: String
            values:
            - values
            - values
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            tenantId: pb.amritsar
            id: id
            isActive: true
            additionalDetails: "{}"
            required: true
            order: order
          id: id
          isActive: true
          additionalDetails: "{}"
        requestInfo:
          userInfo:
            additionalroles:
            - roles:
              - name: name
                description: description
              - name: name
                description: description
              tenantId: tenantId
            - roles:
              - name: name
                description: description
              - name: name
                description: description
              tenantId: tenantId
            tenantId: tenantId
            mobile: mobile
            id: 6
            userName: userName
            email: email
            primaryrole:
            - name: name
              description: description
            - name: name
              description: description
          ver: ver
          requesterId: requesterId
          authToken: authToken
          action: action
          msgId: msgId
          correlationId: correlationId
          apiId: apiId
          did: did
          key: key
          ts: 0
      properties:
        requestInfo:
          $ref: '#/components/schemas/RequestInfo'
        serviceDefinition:
          $ref: '#/components/schemas/ServiceDefinition'
      required:
      - requestInfo
      - serviceDefinition
      type: object
    ServiceDefinitionResponse:
      example:
        pagination:
          offSet: 5.637376656633329
          limit: 59.621339166831824
          sortBy: sortBy
          totalCount: 2.3021358869347655
          order: asc
        serviceDefinition:
        - code: code
          clientId: clientId
          auditDetails:
            lastModifiedTime: 1
            createdBy: createdBy
            lastModifiedBy: lastModifiedBy
            createdTime: 6
          tenantId: pb.amritsar
          attributes:
          - regEx: regEx
            code: code
            dataType: String
            values:
            - values
            - values
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            tenantId: pb.amritsar
            id: id
            isActive: true
            additionalDetails: "{}"
            required: true
            order: order
          - regEx: regEx
            code: code
            dataType: String
            values:
            - values
            - values
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            tenantId: pb.amritsar
            id: id
            isActive: true
            additionalDetails: "{}"
            required: true
            order: order
          id: id
          isActive: true
          additionalDetails: "{}"
        - code: code
          clientId: clientId
          auditDetails:
            lastModifiedTime: 1
            createdBy: createdBy
            lastModifiedBy: lastModifiedBy
            createdTime: 6
          tenantId: pb.amritsar
          attributes:
          - regEx: regEx
            code: code
            dataType: String
            values:
            - values
            - values
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            tenantId: pb.amritsar
            id: id
            isActive: true
            additionalDetails: "{}"
            required: true
            order: order
          - regEx: regEx
            code: code
            dataType: String
            values:
            - values
            - values
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            tenantId: pb.amritsar
            id: id
            isActive: true
            additionalDetails: "{}"
            required: true
            order: order
          id: id
          isActive: true
          additionalDetails: "{}"
        responseInfo:
          ver: ver
          resMsgId: resMsgId
          msgId: msgId
          apiId: apiId
          ts: 0
          status: SUCCESSFUL
      properties:
        responseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        serviceDefinition:
          items:
            $ref: '#/components/schemas/ServiceDefinition'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    ServiceRequest:
      example:
        service:
          accountId: accountId
          clientId: clientId
          auditDetails:
            lastModifiedTime: 1
            createdBy: createdBy
            lastModifiedBy: lastModifiedBy
            createdTime: 6
          tenantId: pb.amritsar
          serviceDefId: serviceDefId
          attributes:
          - attributeCode: attributeCode
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            id: id
            additionalDetails: "{}"
            value: "{}"
          - attributeCode: attributeCode
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            id: id
            additionalDetails: "{}"
            value: "{}"
          id: id
          additionalDetails: "{}"
          referenceId: referenceId
        requestInfo:
          userInfo:
            additionalroles:
            - roles:
              - name: name
                description: description
              - name: name
                description: description
              tenantId: tenantId
            - roles:
              - name: name
                description: description
              - name: name
                description: description
              tenantId: tenantId
            tenantId: tenantId
            mobile: mobile
            id: 6
            userName: userName
            email: email
            primaryrole:
            - name: name
              description: description
            - name: name
              description: description
          ver: ver
          requesterId: requesterId
          authToken: authToken
          action: action
          msgId: msgId
          correlationId: correlationId
          apiId: apiId
          did: did
          key: key
          ts: 0
      properties:
        requestInfo:
          $ref: '#/components/schemas/RequestInfo'
        service:
          $ref: '#/components/schemas/Service'
      required:
      - requestInfo
      - serviceDefinition
      type: object
    ServiceResponse:
      example:
        pagination:
          offSet: 5.637376656633329
          limit: 59.621339166831824
          sortBy: sortBy
          totalCount: 2.3021358869347655
          order: asc
        service:
        - accountId: accountId
          clientId: clientId
          auditDetails:
            lastModifiedTime: 1
            createdBy: createdBy
            lastModifiedBy: lastModifiedBy
            createdTime: 6
          tenantId: pb.amritsar
          serviceDefId: serviceDefId
          attributes:
          - attributeCode: attributeCode
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            id: id
            additionalDetails: "{}"
            value: "{}"
          - attributeCode: attributeCode
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            id: id
            additionalDetails: "{}"
            value: "{}"
          id: id
          additionalDetails: "{}"
          referenceId: referenceId
        - accountId: accountId
          clientId: clientId
          auditDetails:
            lastModifiedTime: 1
            createdBy: createdBy
            lastModifiedBy: lastModifiedBy
            createdTime: 6
          tenantId: pb.amritsar
          serviceDefId: serviceDefId
          attributes:
          - attributeCode: attributeCode
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            id: id
            additionalDetails: "{}"
            value: "{}"
          - attributeCode: attributeCode
            auditDetails:
              lastModifiedTime: 1
              createdBy: createdBy
              lastModifiedBy: lastModifiedBy
              createdTime: 6
            id: id
            additionalDetails: "{}"
            value: "{}"
          id: id
          additionalDetails: "{}"
          referenceId: referenceId
        responseInfo:
          ver: ver
          resMsgId: resMsgId
          msgId: msgId
          apiId: apiId
          ts: 0
          status: SUCCESSFUL
      properties:
        responseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        service:
          items:
            $ref: '#/components/schemas/Service'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    ErrorRes:
      description: "All APIs will return ErrorRes in case of failure which will carry\
        \ ResponseInfo as metadata and Error object as actual representation of error.\
        \ In case of bulk apis, some apis may chose to return the array of Error objects\
        \ to indicate individual failure."
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        Errors:
          description: Error response array corresponding to Request Object array.
            In case of single object submission or _search related paths this may
            be an array of one error element
          items:
            $ref: '#/components/schemas/Error'
          minLength: 1
          type: array
      required:
      - ResponseInfo
      type: object
    ResponseInfo:
      description: "ResponseInfo should be used to carry metadata information about\
        \ the response from the server. apiId, ver and msgId in ResponseInfo should\
        \ always correspond to the same values in respective request's RequestInfo."
      example:
        ver: ver
        resMsgId: resMsgId
        msgId: msgId
        apiId: apiId
        ts: 0
        status: SUCCESSFUL
      properties:
        apiId:
          description: unique API ID
          maxLength: 128
          type: string
        ver:
          description: API version
          maxLength: 32
          type: string
        ts:
          description: response time in epoch
          format: int64
          type: integer
        resMsgId:
          description: unique response message id (UUID) - will usually be the correlation
            id from the server
          maxLength: 256
          type: string
        msgId:
          description: message id of the request
          maxLength: 256
          type: string
        status:
          description: status of request processing - to be enhanced in futuer to
            include INPROGRESS
          enum:
          - SUCCESSFUL
          - FAILED
          type: string
      readOnly: true
      required:
      - apiId
      - status
      - ts
      - ver
      type: object
    Error:
      description: Error object will be returned as a part of reponse body in conjunction
        with ResponseInfo as part of ErrorResponse whenever the request processing
        status in the ResponseInfo is FAILED. HTTP return in this scenario will usually
        be HTTP 400.
      properties:
        code:
          description: Error Code will be module specific error label/code to identiffy
            the error. All modules should also publish the Error codes with their
            specific localized values in localization service to ensure clients can
            print locale specific error messages. Example for error code would be
            User.NotFound to indicate User Not Found by User/Authentication service.
            All services must declare their possible Error Codes with brief description
            in the error response section of their API path.
          type: string
        message:
          description: English locale message of the error code. Clients should make
            a separate call to get the other locale description if configured with
            the service. Clients may choose to cache these locale specific messages
            to enhance performance with a reasonable TTL (May be defined by the localization
            service based on tenant + module combination).
          type: string
        description:
          description: Optional long description of the error to help clients take
            remedial action. This will not be available as part of localization service.
          type: string
        params:
          description: "Some error messages may carry replaceable fields (say $1,\
            \ $2) to provide more context to the message. E.g. Format related errors\
            \ may want to indicate the actual field for which the format is invalid.\
            \ Client's should use the values in the param array to replace those fields."
          items:
            type: string
          type: array
      required:
      - code
      - message
      type: object
    AuditDetails:
      description: Collection of audit related fields used by most models
      example:
        lastModifiedTime: 1
        createdBy: createdBy
        lastModifiedBy: lastModifiedBy
        createdTime: 6
      properties:
        createdBy:
          description: username (preferred) or userid of the user that created the
            object
          type: string
        lastModifiedBy:
          description: username (preferred) or userid of the user that last modified
            the object
          type: string
        createdTime:
          description: epoch of the time object is created
          format: int64
          type: integer
        lastModifiedTime:
          description: epoch of the time object is last modified
          format: int64
          type: integer
      readOnly: true
      type: object
    RequestInfo:
      description: RequestInfo should be used to carry meta information about the
        requests to the server as described in the fields below. All eGov APIs will
        use requestinfo as a part of the request body to carry this meta information.
        Some of this information will be returned back from the server as part of
        the ResponseInfo in the response body to ensure correlation.
      example:
        userInfo:
          additionalroles:
          - roles:
            - name: name
              description: description
            - name: name
              description: description
            tenantId: tenantId
          - roles:
            - name: name
              description: description
            - name: name
              description: description
            tenantId: tenantId
          tenantId: tenantId
          mobile: mobile
          id: 6
          userName: userName
          email: email
          primaryrole:
          - name: name
            description: description
          - name: name
            description: description
        ver: ver
        requesterId: requesterId
        authToken: authToken
        action: action
        msgId: msgId
        correlationId: correlationId
        apiId: apiId
        did: did
        key: key
        ts: 0
      properties:
        apiId:
          description: unique API ID
          maxLength: 128
          type: string
        ver:
          description: API version - for HTTP based request this will be same as used
            in path
          maxLength: 32
          type: string
        ts:
          description: time in epoch
          format: int64
          type: integer
        action:
          description: "API action to be performed like _create, _update, _search\
            \ (denoting POST, PUT, GET) or _oauth etc"
          maxLength: 32
          type: string
        did:
          description: Device ID from which the API is called
          maxLength: 1024
          type: string
        key:
          description: API key (API key provided to the caller in case of server to
            server communication)
          maxLength: 256
          type: string
        msgId:
          description: Unique request message id from the caller
          maxLength: 256
          type: string
        requesterId:
          description: UserId of the user calling
          maxLength: 256
          type: string
        authToken:
          description: //session/jwt/saml token/oauth token - the usual value that
            would go into HTTP bearer token
          type: string
        userInfo:
          $ref: '#/components/schemas/UserInfo'
        correlationId:
          readOnly: true
          type: string
      required:
      - action
      - apiId
      - msgId
      - ts
      - ver
      type: object
    UserInfo:
      description: This is acting ID token of the authenticated user on the server.
        Any value provided by the clients will be ignored and actual user based on
        authtoken will be used on the server.
      example:
        additionalroles:
        - roles:
          - name: name
            description: description
          - name: name
            description: description
          tenantId: tenantId
        - roles:
          - name: name
            description: description
          - name: name
            description: description
          tenantId: tenantId
        tenantId: tenantId
        mobile: mobile
        id: 6
        userName: userName
        email: email
        primaryrole:
        - name: name
          description: description
        - name: name
          description: description
      properties:
        tenantId:
          description: Unique Identifier of the tenant to which user primarily belongs
          type: string
        id:
          description: User id of the authenticated user. Will be deprecated in future
          format: int32
          type: integer
        userName:
          description: Unique user name of the authenticated user
          type: string
        mobile:
          description: mobile number of the autheticated user
          type: string
        email:
          description: email address of the authenticated user
          type: string
        primaryrole:
          description: List of all the roles for the primary tenant
          items:
            $ref: '#/components/schemas/Role'
          type: array
        additionalroles:
          description: array of additional tenantids authorized for the authenticated
            user
          items:
            $ref: '#/components/schemas/TenantRole'
          type: array
      readOnly: true
      required:
      - primaryrole
      - tenantId
      - userName
      type: object
    Role:
      description: |
        minimal representation of the Roles in the system to be carried along in UserInfo with RequestInfo meta data. Actual authorization service to extend this to have more role related attributes
      example:
        name: name
        description: description
      properties:
        name:
          description: Unique name of the role
          maxLength: 64
          type: string
        description:
          description: brief description of the role
          type: string
      required:
      - name
      type: object
    TenantRole:
      description: User role carries the tenant related role information for the user.
        A user can have multiple roles per tenant based on the need of the tenant.
        A user may also have multiple roles for multiple tenants.
      example:
        roles:
        - name: name
          description: description
        - name: name
          description: description
        tenantId: tenantId
      properties:
        tenantId:
          description: tenantid for the tenant
          type: string
        roles:
          description: Roles assigned for a particular tenant - array of role codes/names
          items:
            $ref: '#/components/schemas/Role'
          type: array
      required:
      - roles
      - tenantId
      type: object
